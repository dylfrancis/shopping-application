import { Button, Center } from '@chakra-ui/react';
import { type product } from '@prisma/client';
import Head from 'next/head';
import { useState } from 'react';
import { AddProductFormModal } from '~/components/AddProductFormModal';
import { ModifyProductFormModal } from '~/components/ModifyProductForm';
import { StaffProductCard } from '~/components/StaffProductCard';

import { api } from '~/utils/api';

export default function Home() {
  const ctx = api.useUtils();
  const [isAddProductOpen, setIsAddProductOpen] = useState(false);
  const [modifiedProduct, setModifiedProduct] = useState<product>(
    {} as product
  );
  console.log(modifiedProduct);
  const [isModifyProductOpen, setIsModifyProductOpen] = useState(false);
  const { data } = api.product.getAll.useQuery();
  const { mutate, isPending } = api.product.delete.useMutation({
    onSuccess: () => {
      void ctx.product.getAll.invalidate();
    }
  });

  const deleteProduct = (id: number) => {
    mutate({ id: id });
  };

  return (
    <>
      <Head>
        <title>ðŸ›’ Shopping Application ðŸ›’</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <main>
        <Button onClick={() => setIsAddProductOpen(true)} colorScheme="blue">
          Add Product
        </Button>
        <Center>
          {data?.map((data) => (
            <StaffProductCard
              product={data}
              key={data.product_id}
              onDelete={() => deleteProduct(data.product_id)}
              isDeleteLoading={isPending}
              onModify={() => {
                setModifiedProduct(data);
                setIsModifyProductOpen(true);
              }}
            />
          ))}
        </Center>
        <AddProductFormModal
          isOpen={isAddProductOpen}
          onClose={() => setIsAddProductOpen(false)}
        />
        {isModifyProductOpen && (
          <ModifyProductFormModal
            isOpen={isModifyProductOpen}
            onClose={() => setIsModifyProductOpen(false)}
            product={modifiedProduct}
          />
        )}
      </main>
    </>
  );
}
